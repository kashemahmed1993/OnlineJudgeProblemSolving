//
//  main.cpp
//  SWCPractice
//
//  Created by Md. Abul Kashem on 27/1/20.
//  Copyright Â© 2020 Md. Abul Kashem. All rights reserved.
//

#include <iostream>
#include <cstdio>
#define N 10001

using namespace std;

int arr[N],arr1[N],ans;

bool cmp(int a,int b){
    return arr[a]<=arr[b];
}

void mergeFunction(int left,int mid,int right){
    //cout<<left<<" "<<mid<<" "<<right<<endl;
    int l1=left,l2=mid+1,j=left;
    while(l1<=mid&&l2<=right){
        if(cmp(l1,l2)){
            arr1[j++]=arr[l1++];
        }else{
            arr1[j++]=arr[l2++];
            
            ans=ans + (mid-l1+1);
        }
    }
    while(l1<=mid){
        arr1[j++]=arr[l1++];
    }
    while(l2<=right){
        arr1[j++]=arr[l2++];
    }
    for(int i=left;i<=right;i++){
        arr[i]=arr1[i];
    }
}

void sortFunction(int left,int right){
    if(left ==right)
        return;
    int mid=(left+right)>>1;
    sortFunction(left, mid);
    sortFunction(mid+1, right);
    mergeFunction(left,mid,right);
}

int main(){

    int n;
    while(scanf("%d",&n)==1){
        for(int i=0;i<n;i++){
            scanf("%d",&arr[i]);
        }
        ans=0;
        sortFunction(0,n-1);
        printf("Minimum exchange operations : %d\n",ans);
    }
    return 0;
}
